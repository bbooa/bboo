#include<stdio.h>
//递归
//斐波那契
//1 2 3 4 5 6 7 8
//1 1 2 3 5 8 13 21
int JC(int n);
int DiGui(int n);
int FBNQ(int n);
int FBNQ2(int n);
int DGstrlen(char *str);
int main()
{
	printf("%d\n",DiGui(5));
	printf("%d\n",JC(5));
	printf("%d\n",FBNQ2(8));
	printf("%d\n",FBNQ(8));
	printf("%d\n",DGstrlen("12345"));
	return 0;
}
int JC(int n)
{
	int i;
	int	j=1;
	for(i=1;i<=n;i++)
	{
		j=i*j;

	}

	return j;
}
int DiGui(int n)
{
	if(1==n)
	{
		return 1;
	}
	return n*DiGui(n-1);//向下传递
}
int FBNQ(int n)
{
if(1==n||2==n)
{
return 1;
}
return FBNQ(n-1)+FBNQ(n-2);
}
int FBNQ2(int n)
{
	int v1=1;
	int	v2=1;
	int v3;
	int i;
if(1==n||2==n)
	{
	return 1;
	}

	for(i=3;i<=n;i++)
	{
     v3=v1+v2;
	 v1=v2;
	 v2=v3;
	}

	return v3;
}
int DGstrlen(char *str)
{
	if(*str=='\0')
	{
	return 0;
	}

	return DGstrlen(str+1)+1;
}


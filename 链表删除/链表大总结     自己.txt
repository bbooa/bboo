#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct NODE
{
int id;
struct NODE *pNext;
}Node;
Node *GetNode(int id);
void AddGetNode(Node **ppHead,Node **ppEnd,Node *pNode);
void InsertNode(Node **ppHead,Node **ppEnd,Node *pNode,int id);
void DeleteNode(Node **ppHead,Node **ppEnd,int id);
int main()
{
	Node *pHead=NULL;
	Node *pEnd=NULL;
	AddGetNode(&pHead,&pEnd,GetNode(1));
	AddGetNode(&pHead,&pEnd,GetNode(2));
	AddGetNode(&pHead,&pEnd,GetNode(3));
	AddGetNode(&pHead,&pEnd,GetNode(4));
	AddGetNode(&pHead,&pEnd,GetNode(5));
	InsertNode(&pHead,&pEnd,GetNode(5),5);
	DeleteNode(&pHead,&pEnd,5);
	while(pHead!=NULL)
	{
		printf("%d\n",pHead->id);
		pHead=pHead->pNext;
	}
return 0;
}
Node *GetNode(int id)
{
	Node *pTemp=(Node *)malloc(sizeof(Node));
	pTemp->id=id;
	pTemp->pNext=NULL;

}

void AddGetNode(Node **ppHead,Node **ppEnd,Node *pNode)
{
	if(*ppHead==NULL)
	{
		*ppHead=pNode;
	}
	else
	{
		(*ppEnd)->pNext=pNode;
	}
	*ppEnd=pNode;
	return;
}


void InsertNode(Node **ppHead,Node **ppEnd,Node *pNode,int id)
{
	Node *pMark=*ppHead;
	if((*ppHead)->id==id)
	{
		pNode->pNext=*ppHead;
		*ppHead=pNode;
		return ;
	}
	while(pMark->pNext!=NULL)
	{
		if(pMark->pNext->id==id)
		{
			pNode->pNext=pMark->pNext;
			pMark->pNext=pNode;
		return ;
		}
		pMark=pMark->pNext;
	}
	(*ppEnd)->pNext=pNode;
	*ppEnd=pNode;
	return ;
}
void DeleteNode(Node **ppHead,Node **ppEnd,int id)
{
Node *pDel=NULL;
Node *pMark=*ppHead;
if(pMark->id==id)
{
	pDel=pMark;
	*ppHead=pMark->pNext;
	free(pDel);
	pDel=NULL;
}
while(pMark->pNext!=NULL)
{
int i=0;
if(pMark->pNext->id==id)
{
	pDel=pMark->pNext;
	pMark->pNext=pMark->pNext->pNext;
	free(pDel);
	pDel=NULL;
	i=1;
    }
   if(pMark->pNext==NULL)
   {
	   *ppEnd=pMark;


   }


   if(i==0)
   {
	   pMark=pMark->pNext;
   }
  }

}